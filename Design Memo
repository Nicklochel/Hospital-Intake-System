Design Memo:

A binary tree is appropriate for modeling the doctor reporting structure because it naturally represents hierarchical relationships. Each doctor can have zero, one, or two direct reports, and the tree allows us to traverse the structure efficiently. Preorder traversal is useful when we want to generate reports starting from the top of the hierarchy down to each subordinate. Inorder traversal can help analyze or display the structure in a sorted sequence, and postorder traversal is beneficial when we want to process or summarize information from the bottom up, such as calculating workload distribution among doctors.

For the emergency room, a min-heap is ideal for managing patient intake based on urgency. By storing patients with the lowest urgency score at the root, the system ensures that the most critical patients are always served first. The heap maintains its structure efficiently, allowing both insertions and removals in logarithmic time. This simulates real-time decision-making in emergency care, where delays in identifying high-priority cases could have serious consequences.

Overall, these data structures were chosen to reflect real-world hospital workflows. Trees provide an intuitive way to visualize hierarchical relationships among doctors, while heaps support dynamic priority-based processing for patient intake. Implementing these systems also emphasizes key computer science concepts, including recursion, tree traversal, and heap property maintenance, all of which are essential for scalable and efficient software in healthcare environments.
